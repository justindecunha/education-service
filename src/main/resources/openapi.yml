openapi: 3.0.0
info:
  title: Student API
  version: 1.0.0
paths:
  /students/{id}:
    get:
      summary: Get student by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the student to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    put:
      summary: Update student
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the student to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentInput'
      responses:
        '200':
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    parameters:
      id:
        name: id
        in: path
        description: ID of the student to retrieve
        required: true
        schema:
          type: integer
          format: int64
  /students:
    get:
      summary: List students by name or course
      parameters:
        - in: query
          name: name
          description: Filter students by name
          schema:
            type: string
        - in: query
          name: course
          description: Filter students by course
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Create student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentInput'
      responses:
        '201':
          description: Student created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    parameters:
      name:
        name: name
        in: query
        description: Filter students by name
        schema:
          type: string
      course:
        name: course
        in: query
        description: Filter students by course
        schema:
          type: string
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dateOfBirth:
          type: string
          format: date
        joiningDate:
          type: string
          format: date
        course:
          type: string
    StudentInput:
      type: object
      properties:
        name:
          type: string
        dateOfBirth:
          type: string
          format: date
        joiningDate:
          type: string
          format: date
        course:
          type: string
